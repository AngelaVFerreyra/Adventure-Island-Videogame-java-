//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Caracol.java
//  @ Date : 02/05/2021
//  @ Author : 
//
//


package adventureisland;

import java.awt.Graphics2D;
import java.awt.Rectangle;

public class Serpiente extends Enemigo {

    private static final String DIRECCIONES[] = {"recursos\\Enemigos\\SerpienteIzquierda.GIF",
                                                 "recursos\\Enemigos\\SerpienteDerecha.GIF",
                                                 "recursos\\Enemigos\\SerpienteSaltandoIzquierda.png",
                                                 "recursos\\Enemigos\\SerpienteSaltandoDerecha.png",
                                                 "recursos\\Enemigos\\SerpienteMuertaIzquierda.png",
                                                 "recursos\\Enemigos\\SerpienteMuertaDerecha.png"};
    private int contadorMultiple;
    private int contadorSalto;
    private int contadorGenerarNumero;
    private boolean enMovimiento = false;
    private Escenario esc;
    private int direccionMovimiento = -1;
    private int numeroAleatorio = -1;
    private boolean enSalto = false;
    
    public Serpiente(Escenario esc) {
        super(DIRECCIONES, 6, 0);
        this.visible = false;
        this.contadorMultiple = 0;
        this.contadorSalto = 0;
        this.contadorGenerarNumero = 50;
        this.esc = esc;
        this.puntos = 100;
    }
    
    @Override
    public void movimiento(){
        if(this.visible && this.enMovimiento){
            if(contadorSalto == 0 || numeroAleatorio == -1) {
                direccionMovimiento = (esc.getHeroe().getPosX() < this.getPosX()) ? 1 : -1;
                contadorSalto = 30;
            } 
            if(numeroAleatorio == -1){
                if(contadorGenerarNumero == 0){
                    numeroAleatorio = (int) Math.random()%5;
                } else {
                    this.contadorGenerarNumero -= 1;
                }
            }
            if(numeroAleatorio != 0){
                numeroAleatorio = -1;
            } else {
                if(contadorSalto > 15){
                    posY-=4;
                    posX+=(3*-direccionMovimiento);
                } else if (contadorSalto > 0){
                    posY+=4;
                    posX+=(3*-direccionMovimiento);
                }
                enSalto = true;
                contadorSalto-=1;
                if(contadorSalto == 0){
                    numeroAleatorio = -1;
                    this.contadorGenerarNumero = 100;
                    enSalto = false;
                }
            }
        } 
    }
    
    @Override
    public void display(Graphics2D g){
        if(this.visible){
            if(!(fueChocado)){
                movimiento();
            } else {
                if(this.contadorMultiple < 5){
                    posY-=3;
                } else {
                    if(posY < 495){
                        posY+=4;
                    } else {
                        this.visible = false;
                    }
                }
                if(contadorMultiple < 200){
                    contadorMultiple+=1;
                } else {
                    this.visible = false;
                }
            }
        }
        int nImagen = 0;
        if(enSalto && !(fueChocado)){
            nImagen = (direccionMovimiento != -1) ? 2 : 3;
        } else if(!(fueChocado)){
            nImagen = (direccionMovimiento != -1) ? 0 : 1; 
        } else if(fueChocado){
            nImagen = (direccionMovimiento != -1) ? 4 : 5;  
        }
        cambiarImagen(nImagen);
        g.drawImage(imagen, (int) posX, (int) posY, width, height, null);
    }

    public boolean isEnMovimiento() {
        return enMovimiento;
    }

    public void setEnMovimiento(boolean enMovimiento) {
        this.enMovimiento = enMovimiento;
    }
    
    @Override
    public void setFueChocado(boolean fueChocado){
        this.fueChocado = fueChocado;
        this.contadorMultiple = 0;
        cambiarImagen(2);
    }
    
    @Override
    public Rectangle getBordes(){
        return new Rectangle((int) posX, (int) posY, sizeImg[0][0], sizeImg[0][1]);
    }
}
